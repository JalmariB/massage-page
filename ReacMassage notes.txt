********* CMD ASENNUS ********

asentaa rect ja react dom modulit
npm install react react-dom --save

k��nt�� react ja jsx ---> javascriptiksi
npm install babel-core babel-loader babel-preset-es2015 babel-preset-react --save-dev

asentaa webpackin
npm install webpack webpack-dev-server --save-dev

asentaa routerin
npm install react-router --save



asentaa kaiken start ja buil komennot samassa
npm start



********* REACT MUISTIINPANOT ********





***PROPS***
T�ll� voidaan jakaa dynaamisesti dataa elementeille, eli antaa niille property. Props lyhenne juuri propertyst�, eli elementeille passataan property.

var testiObjekti = {
	nimi: 'Janne',
	age: '31'

}



...
<div>
	<h1>{this.props.title}</h1> <---lis�t��n property elementtiin
	<div>{this.props.objekti.nimi}</div> <--- lis�t��n objektin property
</div>


ReactDOM.render(<CustomerForm title="Customer Form" objekti={janne}/>, document.getElementById('form-container'));




***STATE***
m��ritell��n aplicationin state/tila miss� se on kun se avataan, mit� dataa se pit�� sis�ll��n sillon.
Voidaan k�ytt�� esimerkiksi siihen ett� nested componentteihin passataan dataa.
Jolloin voidaan esimerkiksi vain listan arvoja muuttamalla siirt�� kaikkiin nested componentteihin datat.


getInitialState: function () {
	return {
		esimObjekti: ['janne', 'matti', 'jukka']
}
}



----->

render: function (){
    return(

      <div id="joku">
        <p>otsikko</p>
          <ul>
            <li>{this.state.todos[2]}</li>
          </ul>
	<listComponent esimObjekti={this.state.esimObjekti} <---------t�ss� passataan nested componentille dataa
      </div>


    );
  }
});


****STATEN MUUTTAMINEN*****

Staten muuttaminen. Esimerkiss� muuutetaan otsikko 3 sekunnin p��st� eri otsikoksi

getInitialState: function (){
  return {
    customerinfo: ['Nimi: ', 'Puhelinnumero: ', 'S�hk�posti: ', 'Ajankohta: '],
    booking: ['Ajanvaraus']

  }
},


  render: function (){

      var otsikonMuutos = setTimeout(function(){
        this.setState({
          booking: ['Otsikon muutos']
        });
      }.bind(this),3000);



    return(

      <div>

            <form className="customer-info">
            <h2 className="booking-title">{this.state.booking[0]}</h2>


***** VIRTUAL DOM *****

Virtual DOM nopeuttaa Reactin toimintaa. Virtual DOM katsoo esim staten muutokset ja vertaa niit� DOMiin, kun se l�yt��
muutoksen Virtual DOMin ja "oikean" DOMin v�lill� se muuttaa ainoastaan sen rivin, eik� muita rivej�.
Eli ei tee kaikki rivej� uudestaan kun muutos tapahtuu.



*********Cycling Through Data********

Map functiota k�ytet��n jolla voidaan luoda esim pitk� lista ilman ett� joutuu kirjoittamaan jokaisen listan osan

    var customerinfo = this.state.customerinfo;
    customerinfo = customerinfo.map(function(item, index){
          return (
            <li>{item}</li>
          )
    });

    return(

      <div>
            <ul>{customerinfo}</ul>




*********Nesting Components********

Componentin sis�lle voi tehd� toisia componentteja.

  render: function (){

    var customerinfo = this.state.customerinfo;
    customerinfo = customerinfo.map(function(item, index){
          return (
            <NestedComponent item={item} key={index}/>
          )
    });

    return(

      <div>
            <ul>{customerinfo}</ul>....





//create NestedComponent
var NestedComponent = React.createClass({
  render: function(){
    return (

        <li>
          <div className="nested-component-item">
              <span className="item-name">{this.props.item}</span>
          </div>
        </li>


    );
  }
})





/********** j�rjestys jos haluaa uuden "sivun" ***********/


1.
lis�� uuteen componenttiin
import{Link} from 'react-router';

2.
lis�� p�� komponenttiin,eli index.js
var ComponentinNimi = require('./componentinpolku')

app componenttiin lis�t��n reitti, eli esim.

<Router history={browserHistory}>

          <Route path={'/app/componentinpolku'} component={ComponentinPolku}></Route>
</Router>


3. lis�� linkki siihen componenttiin mist� haluat ment�v�n uuteen componenttiin

	<Link to={'/app/componentinpolku'}><p>linkki</p></Link>





/********** SASS k�yntiin ***********/


D:\massage-page\src\app\sass>sass style.scss style.css






<label htmlFor="email">S�hk�posti:</label>
          <input id="email"type="email" />
        <label htmlFor="phone">Puhelinnumero:</label>
          <input id="phone" type="tel" />




<Link to={'/app/appointmentConfirmation'}><input className="primary-button" type="submit" value="Jatka"/></Link>


var React = require('React');
var ReactDOM = require('react-dom');

import{Link} from 'react-router';


var PointmentStepOne = React.createClass({
  halfHourOnClick: function(){
      this.showElement();
      this.halfHour();
   },
  render: function(){

    return (
      <div>
        <div className="appointment-container">
          <h2>VALITSE HIERONTA</h2>
          <ul>
            <li onClick={this.halfHourOnClick}><p>Hieronta 30min</p><p>30�</p></li>
            <li><p>Hieronta 45min</p><p>40�</p></li>
            <li><p>Hieronta 60min</p><p>45�</p></li>
            <li><p>Hieronta 90min</p><p>55�</p></li>
          </ul>
        </div>
      </div>
    );
  },
showElement: function(){
  this.props.newState(true);
},
halfHour: function(){
  this.props.treatment('30min');
}

});


module.exports = PointmentStepOne;



var React = require('react');

import{Link} from 'react-router';


var NavComponent = require('./nav');
var Header = require('./header');
var FooterComponent = require('./footer');


var Contact = React.createClass ({
  getInitialState: function() {

         return {
            header: 'moi'

          };
     },

  render: function(){
    return (
      <div>
          <NavComponent/>

          { this.state.header ? <Header newHeaderState={this.newHeaderState} /> : null}

              <div className="contact-container">
                  <h2>YHTEYSTIEDOT</h2>
                  <div className="contact-information">
                    <p className="phone">050 6966680</p>
                    <p className="email">janne.berg@hierontatereapeutti.fi</p>
                    <p className="address">Aleksanterinkatu 29 B 33</p>
                  </div>
                  <div className="map">
                      <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1984.930948467768!2d24.941833716373836!3d60.16532198195916!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x46920bc95c7f22a3%3A0x436ac3711d65c332!2sErottajankatu%2C+00130+Helsinki%2C+Suomi!5e0!3m2!1sfi!2sfi!4v1492843395589"></iframe>
                  </div>
              </div>
          <FooterComponent />
        </div>
    );
  },
  newHeaderState:function(){
console.log('newHeaderState')
    var newTitleContact = this.state.header;
    newTitleContact

    this.setState({

      header: newTitleContact

    })
    console.log(this.state.newTitleContact);
    document.getElementById("header-title").innerHTML = this.state.header;
  },

});
module.exports = Contact;














































var d = new Date();
var blaa = d.getTime()  - ((24*(d.getDay()-1) ) *60 *60 *1000)
var monday = new Date(blaa)
var mondayDate = new Date(d.getYear(), d.getMonth(), d.getUTCDate() - d);


for (var i = 1; i <= 4; i++){
	var newDate = new Date(mondayDate.getTime() + (24 *i) * 60 * 60 * 1000 )
	if(newDate.getDay() !== 6 && newDate.getDate() !== 7)
	console.log(newDate)
}






firebaseRef.child(`users/${uid}/todos`).push(todo);

new messages
[1:21] 
var blaa = fireBaseRef.child(polku/jonnekin).push(jotain)
firebaseRef.child(`users/${uid}/todos`).push(todo);

new messages
[1:21] 
var blaa = fireBaseRef.child(polku/jonnekin).push(jotain)

[1:21] 
blaa.then(() => { callback()});
[1:21] 
blaa.then(() => { callback()});
